---
- name: Sending Keys to the places
  hosts: control
  ignore_errors: yes
  tasks: 
  - name: Updating Key Ownership
    file: 
      path: /home/user/.ssh/id_rsa.pub
      owner: user
      group: user
      
  - name: Sending Key to node1
    expect:
      command: ssh-copy-id -i /home/user/.ssh/id_rsa.pub user@node1.ansi.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "user@node1.ansi.example.com's password": 'password'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
  - name: Sending Key to node2
    expect:
      command: ssh-copy-id -i /home/user/.ssh/id_rsa.pub user@node2.ansi.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "user@node2.ansi.example.com's password": 'password'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
  - name: Sending Key to node3
    expect:
      command: ssh-copy-id -i /home/user/.ssh/id_rsa.pub user@node3.ansi.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "user@node3.ansi.example.com's password": 'password'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
#  - name: Creating Temporary Base Repo
#    yum_repository:
#      name: base
#      description: Temporary Repo File
#      baseurl: http://repo/BaseOS
#      gpgcheck: 0
#  - name: Creating Temporary App File
#    yum_repository:
#      name: apps
#      description: Temporary Repo File
#      baseurl: http://repo/AppStream
#      gpgcheck: 0
#  - name: Installing EPEL
#    command: yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y
#  - name: Installing Ansible Tower Dependencies
#    dnf:
#      name:
#        - curl
#        - python3-PyYAML
#        - python3-jinja2
#        - git
#        - gettext
#        - docker
#        - nodejs
#        - npm
#        - gcc-c++
#        - bzip2
#  - name: Downloading AWX
#    git:
#      repo: https://github.com/ansible/awx.git
#      dest: /home/user/awx
#  - name: Building Inventory File and Installing Ansible Tower (Est. Time 10 min.)
#    blockinfile:
#      dest: /home/user/inventory
#      block: |
#         [tower]
#         node1.ansi.example.com ansible_connection=local
#         node2.ansi.example.com ansible_connection=local
#         node3.ansi.example.com ansible_connection=local
#         
#         [database]
#         localhost ansible_connection=local
#                  
#         [all:vars]
#         admin_password='AdminPassword'
#         ansible_become=true
#         ansible_become_method=sudo
#         ansible_become_password=password
#         ansible_become_user=user
#         pg_host='control.ansi.example.com'
#         pg_port='5432'
#         
#         pg_database='tower'
#         pg_username='tower'
#         pg_password='PgStrongPassword'
#         
#         rabbitmq_username=tower
#         rabbitmq_password='RabbitmqPassword'
#         rabbitmq_cookie=cookiemonster
#         rabbitmq_use_long_name=true
#        # Isolated Tower nodes automatically generate an RSA key for authentication;
#        # To disable this behavior, set this value to false
#        # isolated_key_generation=true
#      create: yes
#  - name: Installing Ansible Tower
#    command: bash /home/user/awx/installer/setup.sh
#    tags: play
#   - name: Erasing Repos
#     shell: rm -rf /etc/yum.repos.d/*
  - name: Welcome to the Ansible 8 Study/Test Environment!
    debug:
      msg:
        - 'Next Steps: Accessing The Systems:'
        - '- Control - 192.168.55.60'
        - '- Node 1 - 192.168.55.61'
        - '- Node 2 - 192.168.55.62'
        - '- Node 3 - 192.168.55.63'
        - '- Username - user'
        - '- Password - password'
        - '- For root - use `sudo` or `sudo su`'
        - '- Access example - ssh user@192.168.55.60'