---
- hosts: control
  become: yes
  become_user: vagrant
  become_method: sudo
  tasks: 
  - name: Sending Key to node1
    expect:
      command: ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub vagrant@node1.test.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "vagrant@node1.test.example.com's password": 'vagrant'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
    become_user: vagrant
    ignore_errors: yes
  - name: Sending Key to node2
    expect:
      command: ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub vagrant@node2.test.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "vagrant@node2.test.example.com's password": 'vagrant'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
    become_user: vagrant
    ignore_errors: yes
  - name: Sending Key to node3
    expect:
      command: ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub vagrant@node3.test.example.com -f
      responses:
        'Are you sure you want to continue connecting': 'yes'
        "vagrant@node3.test.example.com's password": 'vagrant'
        'password': 'password'
        '\]\$': 'logout'
      timeout: 10
    become_user: vagrant
    ignore_errors: yes
#  - name: Creating Temporary Repo File
#    file:
#      path: /etc/yum.repos.d/ipa.repo
#      state: touch
#      mode: 0755
#  - name: Building Repo File
#    blockinfile:
#      dest: /etc/yum.repos.d/ipa.repo
#      block: |
#       [base]
#       name=Base
#       baseurl=http://repo/BaseOS
#       gpgcheck=0
#       enabled=1
#       
#       [apps]
#       name=Apps
#       baseurl=http://repo/AppStream
#       gpgcheck=0
#       enabled=1
#  - name: Installing Ansible Tower Dependencies
#    dnf:
#      name:
#        - curl
#        - python3-PyYAML
#        - python3-jinja2
#  - name: Create a directory if it does not exist
#    file:
#      path: /home/vagrant/ansible-tower-setup-3.5.2-1/inventory
#      state: touch
#      mode: '0755'
#  - name: Building Inventory File and Installing Ansible Tower (Est. Time 10 min.)
#    blockinfile:
#      dest: /home/vagrant/ansible-tower-setup-3.5.2-1/inventory
#      block: |
#         [tower]
#         node1.test.example.com ansible_host=192.168.55.61 ansible_user=vagrant 
#         node2.test.example.com ansible_host=192.168.55.62 ansible_user=vagrant 
#         node3.test.example.com ansible_host=192.168.55.63 ansible_user=vagrant 
#         
#         [database]
#         localhost ansible_connection=local
#                  
#         [all:vars]
#         admin_password='AdminPassword'
#         ansible_become=true
#         ansible_become_method=sudo
#         ansible_become_password=vagrant
#         ansible_become_user=vagrant
#         pg_host='control.test.example.com'
#         pg_port='5432'
#         
#         pg_database='tower'
#         pg_username='tower'
#         pg_password='PgStrongPassword'
#         
#         rabbitmq_username=tower
#         rabbitmq_password='RabbitmqPassword'
#         rabbitmq_cookie=cookiemonster
#         rabbitmq_use_long_name=true
#        # Isolated Tower nodes automatically generate an RSA key for authentication;
#        # To disable this behavior, set this value to false
#        # isolated_key_generation=true
#  - name: Installing Ansible Tower
#    shell: mkdir /tmp/tower && cd  /tmp/tower ; curl -k -O https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup--3.5.2-1.tar.gz ; bash ansible-tower-setup-3.5.2-1/setup.sh
#  - name: Erasing Repos
#    shell: rm -rf /etc/yum.repos.d/*
  - name: Welcome to the Ansible 8 Study/Test Environment!
    debug:
      msg:
        - 'Next Steps: Accessing The Systems:'
        - '- Control - 192.168.55.60'
        - '- Node 1 - 192.168.55.61'
        - '- Node 2 - 192.168.55.62'
        - '- Node 3 - 192.168.55.63'
        - '- Username - vagrant'
        - '- Password - vagrant'
        - '- For root - use `sudo` or `sudo su`'
        - '- Access example - ssh vagrant@192.168.55.60'